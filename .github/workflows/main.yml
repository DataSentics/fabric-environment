name: Build & Release pipeline
on:
  push:
  schedule:
    - cron: "0 6 * * *"

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Install Miniforge
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          miniforge-version: 4.10.3-6

      - name: cache venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: |
            .venv
            ~/.poetry/env
          key: ${{ runner.os }}-env-${{ hashFiles('**/poetry.lock') }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-in-project: true

      - name: setup
        run: |
          export SHELL=$SHELL # for python to be able to access the bash version
          if [ ! -d "./.venv" ]; then
            conda env create -f environment.yml -p .venv
          fi
          echo "Installing dependencies"
          poetry install --no-root
          echo "Setting up poe"
          poetry self add 'poethepoet[poetry_plugin]'

      - name: linting
        run: |
          eval "$(conda shell.bash hook)"
          conda activate $PWD/.venv
          poetry poe black-check
